# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumsnet + hinsurance + wealth
+ edu + agehh,
family = "binomial", data = ndhsrasheed)
# Fit the model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth
+ edu + agehh,
family = "binomial", data = ndhsrasheed)
# View model summary
summary(model)
unique(ndhsrasheed$rsmoketobacco)
unique(ndhsrasheed$smoketobacco)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- data.frame(
teenmom = seq(min(ndhsrasheed$teenmom), max(ndhsrasheed$teenmom), length.out = 100),
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
# Predict probabilities using the model for each predictor
predictor_values <- predictor_values %>%
mutate(prob_fistula = predict(model, newdata = ., type = "response"))
# Reshape data for plotting
plot_data <- predictor_values %>%
pivot_longer(cols = starts_with("prob"), names_to = "predictor", values_to = "probability")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = value, y = probability, color = predictor)) +
geom_line(size = 1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = value, y = probability, color = predictor)) +
geom_line() +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
ggplot(plot_data, aes(x = value, y = probability, color = predictor)) +
geom_line(size=1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
library(ggplot2)
# Plot the logistic regression curves
ggplot(plot_data, aes(x = value, y = probability, color = predictor)) +
geom_line(size=1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = predictor, y = probability, color = predictor)) +
geom_line(size=1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
library(tidyverse)
# Load necessary packages
library(tidyverse)
library(ggplot2)
# Read in the 'ndhsrasheed' CSV file
ndhsrasheed <- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# View model summary
summary(model)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- data.frame(
teenmom = seq(min(ndhsrasheed$teenmom), max(ndhsrasheed$teenmom), length.out = 100),
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
# Predict probabilities using the model for each predictor
predictor_values <- predictor_values %>%
mutate(prob_fistula = predict(model, newdata = ., type = "response"))
# Reshape data for plotting
plot_data <- predictor_values %>%
pivot_longer(cols = starts_with("prob"), names_to = "predictor", values_to = "probability")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = predictor, y = probability, color = predictor, linetype = predictor)) +
geom_line(size = 1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Load necessary packages
library(tidyverse)
library(ggplot2)
# Read in the 'ndhsrasheed' CSV file
ndhsrasheed <- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# View model summary
summary(model)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- data.frame(
teenmom = seq(min(ndhsrasheed$teenmom), max(ndhsrasheed$teenmom), length.out = 100),
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
# Predict probabilities using the model for each predictor
predictor_values <- predictor_values %>%
mutate(prob_fistula = predict(model, newdata = ., type = "response"))
# Reshape data for plotting
plot_data <- predictor_values %>%
pivot_longer(cols = starts_with("prob"), names_to = "predictor", values_to = "probability")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = predictor, y = probability, color = predictor, linetype = predictor)) +
geom_line(size = 1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Load necessary packages
library(tidyverse)
library(ggplot2)
# Read in the 'ndhsrasheed' CSV file
ndhsrasheed <- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- expand.grid(
teenmom = seq(min(ndhsrasheed$teenmom), max(ndhsrasheed$teenmom), length.out = 100),
smokecig = mean(ndhsrasheed$smokecig),  # Set other predictors to their mean values
smoketobacco = mean(ndhsrasheed$smoketobacco),
visithosp = mean(ndhsrasheed$visithosp),
preg = mean(ndhsrasheed$preg),
termpreg = mean(ndhsrasheed$termpreg),
mnet = mean(ndhsrasheed$mnet),
rsumnet = mean(ndhsrasheed$rsumnet),
hinsurance = mean(ndhsrasheed$hinsurance),
wealth = mean(ndhsrasheed$wealth),
edu = mean(ndhsrasheed$edu),
agehh = mean(ndhsrasheed$agehh)
)
# Predict probabilities using the model for each predictor
predictor_values$prob_fistula <- predict(model, newdata = predictor_values, type = "response")
# Reshape data for plotting
plot_data <- predictor_values %>%
pivot_longer(cols = starts_with("prob"), names_to = "predictor", values_to = "probability")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = teenmom, y = probability, color = predictor, linetype = predictor)) +
geom_line(size = 1) +
labs(x = "Teen Mom",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Load necessary packages
library(tidyverse)
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- expand.grid(
teenmom = mean(ndhsrasheed$teenmom),  # Set other predictors to their mean values
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
# Read in the 'ndhsrasheed' CSV file
ndhsrasheed <- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- expand.grid(
teenmom = mean(ndhsrasheed$teenmom),  # Set other predictors to their mean values
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
View(audible)
source("C:/Users/SAMMY/Desktop/fistula/fistula source.R")
library(tidyverse)
setwd('C:\Users\SAMMY\Desktop\LINKEDIN JOBS DATASET')
setwd('C:/Users/SAMMY/Desktop/LINKEDIN JOBS DATASET')
read_csv("linkedin-jobs-africa.csv")
jobsAfrica<- read_csv("linkedin-jobs-africa.csv")
jobsAfrica %>% filter(complete.cases(.))
jobsAfrica %>% filter(!complete.cases(.))
glimpse(jobsAfrica)
jobsAfrica %>% View()
unique(jobsAfrica$criteria)
library(translateR)
install.packages(translateR)
install.packages("translateR")
library(translateR)
library(translateR)
library(tidyverse)
library(pROC)
library(ggplot2)
setwd("C:/Users/SAMMY/Desktop/fistula")
ndhsrasheeddata <- read_csv("ndhsrasheed.csv")
ndhsrasheeddata %>% view()
ndhsrasheedselect<-select(ndhsrasheeddata, wealth, edu, rworking, resid, relig, visithosp, teenmom, agefbirth, hofistula, tchild)
ndhsrasheedselect<-drop_na(ndhsrasheedselect)
# Factor the columns for logistic regression
ndhsrasheedselect$wealth <- as.factor(ndhsrasheedselect$wealth)
ndhsrasheedselect$edu <- as.factor(ndhsrasheedselect$edu)
ndhsrasheedselect$rworking <- as.factor(ndhsrasheedselect$rworking)
ndhsrasheedselect$resid <- as.factor(ndhsrasheedselect$resid)
ndhsrasheedselect$relig <- as.factor(ndhsrasheedselect$relig)
ndhsrasheedselect$visithosp <- as.factor(ndhsrasheedselect$visithosp)
ndhsrasheedselect$teenmom <- as.factor(ndhsrasheedselect$teenmom)
fistulamodel1 <-
glm(hofistula~ wealth + edu + rworking + resid + relig + visithosp + teenmom + agefbirth + tchild, family=binomial(link = "logit"),
data=ndhsrasheedselect)
summary(fistulamodel1)
fistulamodel2 <-
glm(hofistula~ wealth + edu + rworking + resid + relig + visithosp + teenmom + agefbirth + tchild, family=binomial(link = "cloglog"),
data=ndhsrasheedselect)
summary(fistulamodel2)
fistulamodel3 <-
glm(hofistula~ wealth + edu + rworking + resid + relig + visithosp + teenmom + agefbirth + tchild, family=binomial(link = "probit"),
data=ndhsrasheedselect)
summary(fistulamodel3)
us <- predict(fistulamodel1, type = "response")
roc_curve<- roc(ndhsrasheedselect$hofistula, us)
auc_value <- auc(roc_curve)
plot(roc_curve, main="ROC curve", col="#007c80") +
text(0.5, 0.5, paste("AUC =", round(auc_value, 4)), cex=0.8)
source("C:/Users/SAMMY/Desktop/fistula/fistula source.R")
#TASK 43A ODEYEMI SAMUEL O.
"a" == "A"
val<- c(1:10,"Sammy", "Odeyemi")
cat(val[c(11,12)])
pi<-22/7
print(pi)
plot(val[c(1:10)])
#TASK 43A ODEYEMI SAMUEL O.
"a" == "A"
#TASK 43A ODEYEMI SAMUEL O.
"a" == "A"
val<- c(1:10,"Sammy", "Odeyemi")
val
cat(val[c(11,12)])
pi<-22/7
print(pi)
plot(val[c(1:10)])
setwd(C:/Users/SAMMY/Desktop/Heart Attack)
setwd("C:/Users/SAMMY/Desktop/Heart Attack")
read.csv("heart_attack_prediction_dataset.csv")
heartp<-read.csv("heart_attack_prediction_dataset.csv")
unique(heartp$Age)
heartp %>% min()
heartp %>% min('Age')
min(heartp$Age)
max(heartp$Age)
library(tidyverse)
library(pROC)
library(ggplot2)
setwd("C:/Users/SAMMY/Desktop/fistula")
ndhsrasheeddata <- read_csv("ndhsrasheed.csv")
ndhsrasheeddata %>% view()
ndhsrasheedselect<-select(ndhsrasheeddata, wealth, edu, rworking, resid, relig, visithosp, teenmom, agefbirth, hofistula, tchild)
ndhsrasheedselect<-drop_na(ndhsrasheedselect)
# Factor the columns for logistic regression
ndhsrasheedselect$wealth <- as.factor(ndhsrasheedselect$wealth)
ndhsrasheedselect$edu <- as.factor(ndhsrasheedselect$edu)
ndhsrasheedselect$rworking <- as.factor(ndhsrasheedselect$rworking)
ndhsrasheedselect$resid <- as.factor(ndhsrasheedselect$resid)
ndhsrasheedselect$relig <- as.factor(ndhsrasheedselect$relig)
ndhsrasheedselect$visithosp <- as.factor(ndhsrasheedselect$visithosp)
ndhsrasheedselect$teenmom <- as.factor(ndhsrasheedselect$teenmom)
fistulamodel1 <-
glm(hofistula~ wealth + edu + rworking + resid + relig + visithosp + teenmom + agefbirth + tchild, family=binomial(link = "logit"),
data=ndhsrasheedselect)
summary(fistulamodel1)
fistulamodel2 <-
glm(hofistula~ wealth + edu + rworking + resid + relig + visithosp + teenmom + agefbirth + tchild, family=binomial(link = "cloglog"),
data=ndhsrasheedselect)
summary(fistulamodel2)
fistulamodel3 <-
glm(hofistula~ wealth + edu + rworking + resid + relig + visithosp + teenmom + agefbirth + tchild, family=binomial(link = "probit"),
data=ndhsrasheedselect)
summary(fistulamodel3)
us <- predict(fistulamodel1, type = "response")
roc_curve<- roc(ndhsrasheedselect$hofistula, us)
auc_value <- auc(roc_curve)
plot(roc_curve, main="ROC curve", col="#007c80") +
text(0.5, 0.5, paste("AUC =", round(auc_value, 4)), cex=0.8)
vs <- predict(fistulamodel2, type = "response")
roc_curve2<- roc(ndhsrasheedselect$hofistula, vs)
auc_value2 <- auc(roc_curve2)
plot(roc_curve2, main="ROC curve", col="#007c00") +
text(0.5, 0.5, paste("AUC =", round(auc_value2, 4)), cex=0.8)
plot(roc_curve, main="ROC curve", col="#007c80") +
text(0.5, 0.5, paste("AUC =", round(auc_value, 4)), cex=0.8)
plot(roc_curve2, main="ROC curve", col="#007c00") +
text(0.5, 0.5, paste("AUC =", round(auc_value2, 4)), cex=0.8)
rm(auc_value2)
rm(vs)
rm(roc_curve2)
plot(roc_curve, main="ROC curve", col="#007c80") +
text(0.5, 0.5, paste("AUC =", round(auc_value, 4)), cex=0.8)
odds_ratios <- exp(coef(fistulamodel1))
print(odds_ratios)
print(odds_ratios)
# Convert odds ratios to a data frame
odds_ratios <- exp(coef(fistulamodel1))
odds_ratios_df <- as.data.frame(odds_ratios)
odds_ratios_df$Term <- rownames(odds_ratios_df)
colnames(odds_ratios_df)[1] <- "OddsRatio"
# Plot odds ratios with ggplot2
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_minimal()
# Plot odds ratios with ggplot2
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_classic()
# Plot odds ratios with ggplot2
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_bw()
# Plot odds ratios with ggplot2
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_dark()
# Plot odds ratios with ggplot2
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_minimal()
# Plot odds ratios with ggplot2 and add data labels
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
geom_text(aes(label=sprintf("%.2f", OddsRatio)), position=position_dodge(width=0.9), hjust=-0.1) +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_minimal()
# Plot odds ratios with ggplot2 and add data labels
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
geom_text(aes(label=sprintf("%.2f", OddsRatio)), position=position_dodge(width=0.7), hjust=-0.1) +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_minimal()
# Plot odds ratios with ggplot2 and add data labels
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
geom_text(aes(label=sprintf("%.2f", OddsRatio)), position=position_dodge(width=0.2), hjust=-0.1) +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_minimal()
# Plot odds ratios with ggplot2 and add data labels
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
geom_text(aes(label=sprintf("%.4f", OddsRatio)), position=position_dodge(width=0.7), hjust=-0.1) +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_minimal()
# Plot odds ratios with ggplot2 and add data labels
ggplot(odds_ratios_df, aes(x=Term, y=OddsRatio)) +
geom_col(fill="#007c80") +
geom_text(aes(label=sprintf("%.2f", OddsRatio)), position=position_dodge(width=0.7), hjust=-0.1) +
coord_flip() + # Flips the axes for easier reading
labs(title="Odds Ratios from Logistic Regression Model",
x="Predictor Variables",
y="Odds Ratio") +
theme_minimal()
summary(fistulamodel1)
summary(fistulamodel2)
library("tidyverse")
# 5 VECTORS
age <- c(25, 30, 35, 40, 45)
gender <- c("Male", "Female", "Female", "Male", "Female")
has_pet <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
constants <- c(1L, 3L, 5L, 7L, 9L)
constants
str(constants)
22/7
#10 LISTS
person_info_list <- list(c(25, 30, 35, 40, 45), c("Sammy","Grace","Tofunmi", "Tomi", "Kehinde"),
c("Married","Single","Married","Divorced","Engaged"))
person_info_list
list2 <- list(c(age),c(gender),c(bool),c(salary),c(decimals))
bool <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
list2 <- list(c(age),c(gender),c(bool),c(salary),c(decimals))
salary <- c(50000, 60000, 55000, 65000, 70000)
list2 <- list(c(age),c(gender),c(bool),c(salary),c(decimals))
decimals <- c(1.50, 3.52, 3.142, 22.58, 200.56)
list2 <- list(c(age),c(gender),c(bool),c(salary),c(decimals))
source("C:/Users/SAMMY/Desktop/fistula/fistula source.R")
