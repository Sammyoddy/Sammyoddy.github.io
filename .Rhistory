#read in audible csv
audible<- read_csv("C:/Users/SAMMY/Desktop/Audible/audible_uncleaned.csv")
#load tidyverse package
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(RColorBrewer)
#read in audible csv
audible<- read_csv("C:/Users/SAMMY/Desktop/Audible/audible_uncleaned.csv")
#examine dataset
view(audible)
head(audible,20)
library(tidyverse)
library(knitr)
readalot<- read_csv('C:/Users/SAMMY/Desktop/Portfoliooo/Sammy Odeyemi/Excel Projects/READALOT BOOKSTORE/readalot.csv')
readalot<- read_csv('C:/Users/SAMMY/Desktop/Portfoliooo/Sammy Odeyemi/Excel Projects/READALOT BOOKSTORE/readalot.csv')
kable(head(readalot,10))
audible %>% str(releasedate)
var3<-"How  are your headaches?  Subsided much, yea?"
paste(var3)
#load tidyverse package
library(tidyverse)
#read in audible csv
data<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
view(data)
View(data)
unique(data$remarried)
unique(data$teenmom)
unique(data$smokecig)
summarise(data)
summary(data)
unique(data$contraceptive)
unique(data$contramethd)
unique(data$visithosp)
unique(data$evaccinated)
#load tidyverse package
library(tidyverse)
#read in audible csv
data<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv") %>% na.omit()
View(data)
View(data)
#read in audible csv
data<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
data<-na.omit(data)
#read in audible csv
data<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
View(data)
View(data)
View(audible)
View(audible)
rm(audible)
rm(readalot)
#read in logreg csv
data<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv") %>% na.omit()
#read in logreg csv
data<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
View(data)
View(data)
View(data)
summary(data)
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(my_data), replace = TRUE, prob = c(0.7, 0.3))
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(data), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- my_data[sample, ]
# Split the data
train <- data[sample, ]
test <- data[!sample, ]
#load tidyverse package
library(tidyverse)
#read in logreg csv
data<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
View(ndhsrasheed)
summary(ndhsrasheed)
#load tidyverse package
library(tidyverse)
#read in logreg csv
ndhsrasheed<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
View(ndhsrasheed)
summary(ndhsrasheed)
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- data[sample, ]
test <- data[!sample, ]
unique(ndhsrasheed$agehh)
#load tidyverse package
library(tidyverse)
#read in logreg csv
ndhsrasheed<- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
View(ndhsrasheed)
summary(ndhsrasheed)
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumsnet + hinsurance + wealth
+ edu + agehh,
family = "binomial", data = ndhsrasheed)
# Fit the model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth
+ edu + agehh,
family = "binomial", data = ndhsrasheed)
# View model summary
summary(model)
unique(ndhsrasheed$rsmoketobacco)
unique(ndhsrasheed$smoketobacco)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- data.frame(
teenmom = seq(min(ndhsrasheed$teenmom), max(ndhsrasheed$teenmom), length.out = 100),
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
# Predict probabilities using the model for each predictor
predictor_values <- predictor_values %>%
mutate(prob_fistula = predict(model, newdata = ., type = "response"))
# Reshape data for plotting
plot_data <- predictor_values %>%
pivot_longer(cols = starts_with("prob"), names_to = "predictor", values_to = "probability")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = value, y = probability, color = predictor)) +
geom_line(size = 1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = value, y = probability, color = predictor)) +
geom_line() +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
ggplot(plot_data, aes(x = value, y = probability, color = predictor)) +
geom_line(size=1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
library(ggplot2)
# Plot the logistic regression curves
ggplot(plot_data, aes(x = value, y = probability, color = predictor)) +
geom_line(size=1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = predictor, y = probability, color = predictor)) +
geom_line(size=1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
library(tidyverse)
# Load necessary packages
library(tidyverse)
library(ggplot2)
# Read in the 'ndhsrasheed' CSV file
ndhsrasheed <- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# View model summary
summary(model)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- data.frame(
teenmom = seq(min(ndhsrasheed$teenmom), max(ndhsrasheed$teenmom), length.out = 100),
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
# Predict probabilities using the model for each predictor
predictor_values <- predictor_values %>%
mutate(prob_fistula = predict(model, newdata = ., type = "response"))
# Reshape data for plotting
plot_data <- predictor_values %>%
pivot_longer(cols = starts_with("prob"), names_to = "predictor", values_to = "probability")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = predictor, y = probability, color = predictor, linetype = predictor)) +
geom_line(size = 1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Load necessary packages
library(tidyverse)
library(ggplot2)
# Read in the 'ndhsrasheed' CSV file
ndhsrasheed <- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# View model summary
summary(model)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- data.frame(
teenmom = seq(min(ndhsrasheed$teenmom), max(ndhsrasheed$teenmom), length.out = 100),
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
# Predict probabilities using the model for each predictor
predictor_values <- predictor_values %>%
mutate(prob_fistula = predict(model, newdata = ., type = "response"))
# Reshape data for plotting
plot_data <- predictor_values %>%
pivot_longer(cols = starts_with("prob"), names_to = "predictor", values_to = "probability")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = predictor, y = probability, color = predictor, linetype = predictor)) +
geom_line(size = 1) +
labs(x = "Predictor Values",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Load necessary packages
library(tidyverse)
library(ggplot2)
# Read in the 'ndhsrasheed' CSV file
ndhsrasheed <- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- expand.grid(
teenmom = seq(min(ndhsrasheed$teenmom), max(ndhsrasheed$teenmom), length.out = 100),
smokecig = mean(ndhsrasheed$smokecig),  # Set other predictors to their mean values
smoketobacco = mean(ndhsrasheed$smoketobacco),
visithosp = mean(ndhsrasheed$visithosp),
preg = mean(ndhsrasheed$preg),
termpreg = mean(ndhsrasheed$termpreg),
mnet = mean(ndhsrasheed$mnet),
rsumnet = mean(ndhsrasheed$rsumnet),
hinsurance = mean(ndhsrasheed$hinsurance),
wealth = mean(ndhsrasheed$wealth),
edu = mean(ndhsrasheed$edu),
agehh = mean(ndhsrasheed$agehh)
)
# Predict probabilities using the model for each predictor
predictor_values$prob_fistula <- predict(model, newdata = predictor_values, type = "response")
# Reshape data for plotting
plot_data <- predictor_values %>%
pivot_longer(cols = starts_with("prob"), names_to = "predictor", values_to = "probability")
# Plot the logistic regression curves
ggplot(plot_data, aes(x = teenmom, y = probability, color = predictor, linetype = predictor)) +
geom_line(size = 1) +
labs(x = "Teen Mom",
y = "Probability of Fistula",
title = "Logistic Regression Curves for Predictor Variables") +
theme_minimal() +
theme(legend.position = "top")
# Load necessary packages
library(tidyverse)
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- expand.grid(
teenmom = mean(ndhsrasheed$teenmom),  # Set other predictors to their mean values
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
# Read in the 'ndhsrasheed' CSV file
ndhsrasheed <- read_csv("C:/Users/SAMMY/Downloads/ndhsrasheed.csv")
# Set a seed for reproducibility
set.seed(1)
# Create a logical vector for sampling
sample <- sample(c(TRUE, FALSE), nrow(ndhsrasheed), replace = TRUE, prob = c(0.7, 0.3))
# Split the data
train <- ndhsrasheed[sample, ]
test <- ndhsrasheed[!sample, ]
# Fit the logistic regression model
model <- glm(fistula ~ teenmom + smokecig + smoketobacco + visithosp +
preg + termpreg + mnet + rsumnet + hinsurance + wealth +
edu + agehh,
family = "binomial", data = ndhsrasheed)
# Create a dataframe with a sequence of values for each predictor
predictor_values <- expand.grid(
teenmom = mean(ndhsrasheed$teenmom),  # Set other predictors to their mean values
smokecig = seq(min(ndhsrasheed$smokecig), max(ndhsrasheed$smokecig), length.out = 100),
smoketobacco = seq(min(ndhsrasheed$smoketobacco), max(ndhsrasheed$smoketobacco), length.out = 100),
visithosp = seq(min(ndhsrasheed$visithosp), max(ndhsrasheed$visithosp), length.out = 100),
preg = seq(min(ndhsrasheed$preg), max(ndhsrasheed$preg), length.out = 100),
termpreg = seq(min(ndhsrasheed$termpreg), max(ndhsrasheed$termpreg), length.out = 100),
mnet = seq(min(ndhsrasheed$mnet), max(ndhsrasheed$mnet), length.out = 100),
rsumnet = seq(min(ndhsrasheed$rsumnet), max(ndhsrasheed$rsumnet), length.out = 100),
hinsurance = seq(min(ndhsrasheed$hinsurance), max(ndhsrasheed$hinsurance), length.out = 100),
wealth = seq(min(ndhsrasheed$wealth), max(ndhsrasheed$wealth), length.out = 100),
edu = seq(min(ndhsrasheed$edu), max(ndhsrasheed$edu), length.out = 100),
agehh = seq(min(ndhsrasheed$agehh), max(ndhsrasheed$agehh), length.out = 100)
)
View(audible)
