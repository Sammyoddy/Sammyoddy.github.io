---
title: "FIFA 21 Data Wrangling"
toc: true
monofont: 'Consolas'
author: "Sammy Odeyemi"
---

![](/R Projects/fifa21/fifaMAIN.jpg){fig-align="center" width="371"}

# Introduction

The [FIFA 21 dataset](https://github.com/Sammyoddy/Fifa21/blob/main/fifa21_raw_data.csv){style="COLOR:BLUE;"} is a comprehensive collection of data related to `football players`, `teams`, and `matches` from the FIFA 21 video game. It includes detailed information such as player attributes, team statistics, and match outcomes. The dataset spans from the game’s release in 2020 . This [dataset](https://www.kaggle.com/datasets/yagunnersya/fifa-21-messy-raw-dataset-for-cleaning-exploring){style="COLOR:BLUE;"} was obtained from [Kaggle](kaggle.com){style="color:blue;"}.

A preliminary analysis of the [FIFA 21 dataset](https://github.com/Sammyoddy/Fifa21/blob/main/fifa21_raw_data.csv){style="COLOR:BLUE'"} reveals several errors and inconsistencies that need to be addressed. These issues can be corrected using string manipulation techniques along with other data cleaning methods. By cleaning the dataset, we can ensure accurate and reliable data for further analysis and insights.

# Libraries Used

The `tidyverse` library is a collection of R packages that can be used in Data Analysis. Some of the packages to be used are the `readr` for data import, `dplyr` for data wrangling, `stringr` for string manipulation to mention a few. Since these packages are housed and are core packages in the `tidyverse`. I call this library since it is already installed.

```{r include=FALSE}
options(repos = c(CRAN = "https://cran.r-project.org"))
```

```{r}
#load libraries 
library(knitr)
library(lubridate) 
library(tidyverse)
library(kableExtra)
```

::: {.callout-note appearance="simple"}
# Note {style="color:#0d6efd;"}

Should it not be installed, run the code block below before calling the libraries for use.

```{r EVAL=FALSE,message=FALSE, warning=FALSE}
install.packages(c("tidyverse","lubridate","kableExtra"))
```

**The `kableExtra` package in R is designed to enhance the functionality of tables**
:::

# Data Import

The FIFA 21 dataset is a CSV file from Kaggle. To dive deep into the data, I proceeded to import it into RStudio, the IDE for the R Programming Language but not without first setting working directory.

-   **Setting Working Directory**

```{r eval=FALSE}
setwd("C:/Users/SAMMY/Desktop/FIFA21")
```

-   **Reading in Data**

<div>

```{r}
#read in fifa 21 csv
fifa21raw<-read_csv("fifa21 raw data v2.csv")
```

</div>

A peek into the dataset just to get familiar with what the data is about :

```{r}
#examine dataset 
knitr::kable(head(fifa21raw,5))
```

```{r}
#Check for Cells with NA
fifa21raw %>% select(ID:Hits) %>% filter(!complete.cases(.)) %>% head(5) %>% knitr::kable()
```

# Data Wrangling

### Renaming Columns

Upon examining the dataframe, some column names are inconsistent and badly formatted, hence the need to rename

```{r}
#renamed ColumnNames for easy readability
fifa21raw<-fifa21raw %>% rename(Overall_Analysis=`↓OVA`,PlayerPotential=POT,
                                Best_Overall=BOV,Joined_National=Joined,
                                Skill_Moves=SM,AttackingWorkRate=`A/W`,
                                DefensiveWorkRate=`D/W`,WeakFootRating=`W/F`,
                                InjuryRating=IR,Shooting=SHO,Pace=PAC,
                                Weight_kg=Weight)
```

The purpose of this codeblock above is to make the column names in the `fifa21raw` dataframe more descriptive and easier to understand. This helps improve readability of code, especially when working with the data frame in subsequent analyses or visualizations.

::: {.callout-tip appearance="simple"}
##### Data Dictionary {style="color:#FFA000"}

Here is the [data dictionary](https://docs.google.com/presentation/d/1bS616FSVsH3WzOT4uckQmWJHP1HRj_TF/edit?usp=drive_link&ouid=107549502594190094236&rtpof=true&sd=true){style="color:blue;"} describing the columns in the dataframe.
:::

#### check

To crosscheck the `rename()` is effected in dataframe

```{r}
colnames(fifa21raw)
```

## Club Column {#authornarrator}

The `Club` column contains clubs of respective players and upon examining the column, it is populated with nextline characters "\\n" which leaves the `Club column` in bad format.

Here are first 10 observations in the column

```{r}
fifa21raw %>% select(Club) %>% head(10)
```

```{r}
#Removed nextline characters found in the club column
fifa21raw<-fifa21raw %>% mutate(Club=str_remove_all(Club,"\n"))
```

The code chunk above rids the Club column of any nextline characters by use of the `str_remove_all()`

#### check

To crosscheck that the column is clear of any nextline characters:

```{r}
fifa21raw %>% select(Club) %>% head(10)
```

## Contract Column

The `Contract` column contains information about the duration of contracts and loan periods for players.

Here are first 10 observations in the column

```{r}
fifa21raw %>% select(Contract) 
```

```{r warning=FALSE}
fifa21raw<-separate(fifa21raw,col = Contract,into = c("start_year","end_year"),sep = "~",remove = F)

fifa21raw<-fifa21raw %>% 
  mutate(Contract_type=case_when(str_detect(start_year,"Free")~"Free", 
                                 str_detect(start_year,"On Loan")~ "Loan",
                                 TRUE~ "Full-Time"),
         start_year=case_when(str_detect(Contract,"Free")~ NA_character_,
                              str_detect(Contract,"On Loan")~NA_character_,
                              TRUE~start_year),
         end_year=case_when(str_detect(Contract,"On Loan")~ str_extract(Contract,"\\d{4}"),
                            TRUE~end_year))

fifa21raw <-fifa21raw %>% mutate(across(c(start_year,end_year),as.numeric))
```

This code chunk above separates the `Contract` column into `start_year` and `end_year`, classifies contracts as ‘Free’, ‘Loan’, or ‘Full-Time’, handles missing values for `start_year` and `end_year` based on contract type, and converts these columns to numeric values for further analysis.

#### check

To crosscheck that the new columns are created off the existing column to determine what groups are the players' Contract_type and all changes effected:

```{r}
knitr::kable(select(fifa21raw,Contract,Contract_type,start_year,end_year) %>% head(10))
```

## Height

The `height` column comprises of Players' Height, some in `centimeter` and some in `feet` and `inches`

such as `199cm`and `"5'7\""` respectively

```{r}
knitr::kable(select(fifa21raw,Height) %>% head(10))
```

There is the need to then standardize all height measurements and to ensure all values are in the same unit (centimeters)

```{r}
convert_height_fn<-function(Height) {
  counter<<-1
  for (row in Height) {
    if(str_detect(row,"'"))
             {
               row<-strsplit(row,"'")[[1]]
               feet<-as.numeric(row[[1]])
               inches<-as.numeric(str_remove(row[[2]],"\""))
               cm<-round(((feet*12)+ inches) * 2.54,digits=0)
               Height[counter]<-cm
             }
           else{
             Height[counter]<- as.numeric(str_remove(row,"cm"))
           }
    counter<- counter+1
  }
  return(Height)
  
}

fifa21raw<- mutate(fifa21raw,Height=as.numeric(convert_height_fn(Height))) %>% 
  rename(height_cm=Height)

```

::: {.callout-note icon="false"}
## The convert height function

This function helps to convert and standardize height values \~ some in feet and inches, and others in centimeters for the purpose of consistency and data quality
:::

#### check

To crosscheck that the height column has been standardized

```{r}
knitr::kable(select(fifa21raw,height_cm) %>% head(10))
```

## Weight

The `Weight` column comprises of Players' Weight, some in `kilogram`, some in `pounds` such as `72kg` and `192lbs` respectively

```{r}
knitr::kable(select(fifa21raw,Weight_kg) %>% head(10))
```

There is the need to then standardize all Weight measurements and to ensure all values are in the same unit (centimeters)

```{r}
convert_weight_fn<- function(Weight_kg){
  counter<<-1
    for (row in Weight_kg) {
      if (str_detect(row,"lbs")) {
        row<-str_remove(row,"lbs")
        row<- round(as.numeric(row)/2.20462,digits=0)
        Weight_kg[counter]<-row
      }
      else{
        row<-str_remove(row,"kg")
      row<- as.numeric(row)
      Weight_kg[counter]<-row
      }
      counter<-counter+1
    }
 return(Weight_kg) 
}

fifa21raw<- mutate(fifa21raw,Weight_kg=as.numeric(convert_weight_fn(Weight_kg)))
```

::: {.callout-note appearance="simple" icon="false"}
## The convert weight function

This function helps to convert and standardize weight values \~ some in pounds, kilogram and others in centimeters for the purpose of consistency and data quality
:::

#### check

To crosscheck that the weight column has been standardized

```{r}
knitr::kable(select(fifa21raw,Weight_kg) %>% head())
```

## Joined National Column

The `Joined National` column is a character column indicating when a player joined up with the National Team but it ideally should be of date datatype.

Here's what it looks like:

```{r}
fifa21raw%>%select(`Joined_National`)%>%head(10)%>%knitr::kable()
```

It should be in date format and the code chunk beneath ensures of that.

```{r}
fifa21raw<-fifa21raw %>% mutate(Joined_National=as.Date(Joined_National,format="%b %d, %Y"))
```

#### check

To crosscheck that the Joined National column has been standardized to date data type

```{r}
fifa21raw %>% select(Joined_National) %>% head(10) %>% knitr::kable()

str(fifa21raw$Joined_National)
```

## Value, Wage and Release Clause Columns

The `Value`, `Wage` and `Release Clause` columns house the worth of a player in the market, their earnings in their clubs and the fee to be paid to release a player from their contract respectively.

```{r}
 knitr::kable(select(fifa21raw,Value,Wage,`Release Clause`) %>% head(10))
```

Upon close examination, the columns are of character datatype and contain the Euro currency symbol (€). Additionally, they use “M” to represent values in millions and “K” to represent values in thousands.

```{r warning=FALSE}
fifa21raw<-fifa21raw %>% mutate(across(c(Value,Wage,`Release Clause`),
 function(col) {
   case_when(
  str_detect(col, "M") ~ as.double(str_replace_all(col, "(€|M)", "")) * 1000000,
  str_detect(col, "K") ~ as.double(str_replace_all(col, "(€|K)", "")) * 1000,
  TRUE ~ as.double(str_replace(col, "€", "")))}))
```

This code chunk above processes the `value`, `wage`, and `release clause` columns by removing currency symbols and suffixes, removing non-numeric characters and converting to numeric values.

#### check

To crosscheck that the columns have been appropriately processed (cleaned of currency, millions and thousands symbols and converted to numeric values):

```{r}
knitr::kable(select(fifa21raw,Value,`Release Clause`,Wage) %>% head(10))
```

## Weak Foot, Skill Move and Injury Rating Columns

The **`Weak Foot`**, **`Skill Moves`**, and **`Injury Rating`** columns collectively provide insights into a player’s technical skills and physical resilience. The **`Weak Foot`** rating (1 to 5 stars) shows proficiency with the non-dominant foot, enhancing versatility. The **`Skill Moves`** rating (1 to 5 stars) reflects the ability to perform complex dribbles. The **`Injury Rating`** (1 to 5 stars) indicates susceptibility to injuries, with lower ratings suggesting better durability.

A peek at some of the observations in these columns is as below:

```{r}
fifa21raw %>% select(WeakFootRating,Skill_Moves,InjuryRating) %>% head(5) %>% knitr::kable()
```

They have similar inconsistency, hence the need to treat them altogether:

```{r warning=FALSE}
fifa21raw <- fifa21raw %>%
  mutate(across(c(WeakFootRating, Skill_Moves, InjuryRating), 
            ~ if_else(str_detect(., "★"), 
                      as.numeric(str_remove(., "★")), 
                      as.numeric(.))
  ))


```

#### check

To crosscheck that the columns are clear of the star symbol (★):

```{r}
fifa21raw %>%select(WeakFootRating,Skill_Moves,InjuryRating) %>% head(5) %>% knitr::kable()
```

## Sub-setting Columns

This is important so as to focus on relevant data and to be rid of unnecessary columns.

```{r}
fifa21raw <- fifa21raw %>%
  select(ID:Contract, Contract_type, Positions, height_cm, Weight_kg, `Preferred Foot`:Hits)  
```

```{r}
fifa21raw %>% select(ID:Hits)%>% head(10) %>% knitr::kable()
```

## Saving Wrangled Data

```{r}
write_csv(as.data.frame(fifa21raw),"fifa21_cleaned.csv")
```

::: callout-note
## Dataset and Source Code

You can access dataset [here](https://www.kaggle.com/datasets/yagunnersya/fifa-21-messy-raw-dataset-for-cleaning-exploring) and source code [here](https://github.com/Sammyoddy/Fifa21/blob/main/newfifa.R){style="COLOR:BLUE;"}
:::

## Conclusion

In this project, the FIFA 21 dataset was successfully wrangled by cleaning, transforming, and structuring the data. This process ensured the dataset was accurate, consistent, and ready for analysis. The cleaned data can now be used for various analytical tasks, providing valuable insights into player performance and team comparisons.
