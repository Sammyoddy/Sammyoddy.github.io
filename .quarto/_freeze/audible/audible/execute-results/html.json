{
  "hash": "7d2f4e45a5a43da986c586bc370775e2",
  "result": {
    "markdown": "---\ntitle: \"audible\"\ntoc: true\nmonofont: 'Consolas'\n---\n\n\n<img src=\"/audible/audiblepage.jpg\" style=\"width:324px;height:190px;\"/>\n\n# [Audible Data Cleaning](#audible) {#audible}\n\n\n```{=html}\nData Cleaning is the process of identifying and correcting or removing errors, inaccuracies, and inconsistencies and overall appropriating the data to improve the quality of the data, thereby making it more suitable for analysis. It is a crucial step in the data analysis process as the quality of data directly impacts the validity of the results. It can involve but not limited to: \n<ul>\n  <li>Handling Missing Values</li>\n  <li>Removing Duplicates</li>\n  <li>Data Type Conversion</li>\n  <li>Outlier Detection</li>\n  <li>Error Correction</li>\n</ul>\n```\n\nThe Audible dataset is a collection of data related to audiobooks gathered from [Audible](audible.in \"link to Audiobooks\"){style=\"color:blue\"}. It contains data from authors of audiobooks to release dates. The data represents the important details of audiobooks from 1998 till 2025 (pre-planned releases) and it was obtained from [Kaggle](https://www.kaggle.com/datasets/snehangsude/audible-dataset \"audible dataset\"){style=\"color:blue;\"}. A peek into the Audible dataset indicates that there are some errors and inconsistencies which can be corrected using string manipulation techniques along side other data cleaning techniques.\n\n# [Libraries Used](#libraries)\n\nThe `tidyverse` library is a collection of R packages that can be used in Data Analysis. Some of the packages to be used are the `readr` for data import, `dplyr` for data wrangling, `stringr` for string manipulation to mention a few. Since these packages are housed in the `tidyverse`. I call this library since it is already installed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load libraries\nlibrary(knitr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.0\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(RColorBrewer)\n```\n:::\n\n\n# [Data Import](#Data)\n\nThe Audible [dataset](https://www.kaggle.com/datasets/snehangsude/audible-dataset){style=\"color:blue;\"} is a csv file from Kaggle and in order to deep dive into the data I proceeded to import it into RStudio, the IDE for the R Programming Language.\n\n::: {style=\"background-color:gray;\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#read in audible csv \naudible<-read_csv(\"C:/Users/SAMMY/Desktop/Audible/audible_uncleaned.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 87489 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): name, author, narrator, time, releasedate, language, stars, price\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n:::\n\nA peek into the dataset just to get familiar with what the data is about :\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#examine dataset \nkable(head(audible,10)) \n```\n\n::: {.cell-output-display}\n|name                                       |author                    |narrator                   |time               |releasedate |language |stars                         |price    |\n|:------------------------------------------|:-------------------------|:--------------------------|:------------------|:-----------|:--------|:-----------------------------|:--------|\n|Geronimo Stilton #11 & #12                 |Writtenby:GeronimoStilton |Narratedby:BillLobely      |2 hrs and 20 mins  |04-08-08    |English  |5 out of 5 stars34 ratings    |468.00   |\n|The Burning Maze                           |Writtenby:RickRiordan     |Narratedby:RobbieDaymond   |13 hrs and 8 mins  |01-05-18    |English  |4.5 out of 5 stars41 ratings  |820.00   |\n|The Deep End                               |Writtenby:JeffKinney      |Narratedby:DanRussell      |2 hrs and 3 mins   |06-11-20    |English  |4.5 out of 5 stars38 ratings  |410.00   |\n|Daughter of the Deep                       |Writtenby:RickRiordan     |Narratedby:SoneelaNankani  |11 hrs and 16 mins |05-10-21    |English  |4.5 out of 5 stars12 ratings  |615.00   |\n|The Lightning Thief: Percy Jackson, Book 1 |Writtenby:RickRiordan     |Narratedby:JesseBernstein  |10 hrs             |13-01-10    |English  |4.5 out of 5 stars181 ratings |820.00   |\n|The Hunger Games: Special Edition          |Writtenby:SuzanneCollins  |Narratedby:TatianaMaslany  |10 hrs and 35 mins |30-10-18    |English  |5 out of 5 stars72 ratings    |656.00   |\n|Quest for the Diamond Sword                |Writtenby:WinterMorgan    |Narratedby:LukeDaniels     |2 hrs and 23 mins  |25-11-14    |English  |5 out of 5 stars11 ratings    |233.00   |\n|The Dark Prophecy                          |Writtenby:RickRiordan     |Narratedby:RobbieDaymond   |12 hrs and 32 mins |02-05-17    |English  |5 out of 5 stars50 ratings    |820.00   |\n|Merlin Mission Collection                  |Writtenby:MaryPopeOsborne |Narratedby:MaryPopeOsborne |10 hrs and 56 mins |02-05-17    |English  |5 out of 5 stars5 ratings     |1,256.00 |\n|The Tyrant’s Tomb                          |Writtenby:RickRiordan     |Narratedby:RobbieDaymond   |13 hrs and 22 mins |24-09-19    |English  |5 out of 5 stars58 ratings    |820.00   |\n:::\n:::\n\n\n# [Data Cleaning](#datacleaning)\n\n## Author and Narrator Columns {#authornarrator}\n\nThe [`Author`]{style=\"color:teal;\"} and [`Narrator`]{style=\"color:teal;\"} columns contain the names of the Authors and Narrators of the Audiobooks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#select Author and Narrator columns\naudible %>% select(author,narrator) %>% head(10) %>%kable()\n```\n\n::: {.cell-output-display}\n|author                    |narrator                   |\n|:-------------------------|:--------------------------|\n|Writtenby:GeronimoStilton |Narratedby:BillLobely      |\n|Writtenby:RickRiordan     |Narratedby:RobbieDaymond   |\n|Writtenby:JeffKinney      |Narratedby:DanRussell      |\n|Writtenby:RickRiordan     |Narratedby:SoneelaNankani  |\n|Writtenby:RickRiordan     |Narratedby:JesseBernstein  |\n|Writtenby:SuzanneCollins  |Narratedby:TatianaMaslany  |\n|Writtenby:WinterMorgan    |Narratedby:LukeDaniels     |\n|Writtenby:RickRiordan     |Narratedby:RobbieDaymond   |\n|Writtenby:MaryPopeOsborne |Narratedby:MaryPopeOsborne |\n|Writtenby:RickRiordan     |Narratedby:RobbieDaymond   |\n:::\n:::\n\n\nThese columns in the dataset have a common issue known as string concatenation errors. This occurs when two or more strings are joined together without appropriate spacing or delimiters. In this case, the names of authors and narrators are concatenated without spaces, making it difficult to distinguish between first and last names.\n\nAdditionally, the strings '*Writtenby:*' and '*Narratedby:*' are concatenated with the names, adding unnecessary clutter to our data; hence the need to remove unnecessary strings and add spaces between the names using regular expressions.\n\n::: {style=\"background-color:gray;\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#author and narrator column cleaned of unwanted characters and spaces added where necessary\naudible<-audible %>%mutate_at(vars(author,narrator),\n  ~if_else(str_detect(.,\"(Writtenby:)|(Narratedby:)\"),\n        str_replace_all(str_remove(.,\"(Writtenby:)|(Narratedby:)|\\\\d+\"),\n                        \"(?<=[a-z])(?=[A-Z])\", \" \"),\n        .)\n  )\n```\n:::\n\n:::\n\n**cross-check**\n\nIt becomes important to **check** the content of these columns after performing the operation\n\n<div>\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(author,narrator) %>% head(5) %>% kable()\n```\n\n::: {.cell-output-display}\n|author           |narrator        |\n|:----------------|:---------------|\n|Geronimo Stilton |Bill Lobely     |\n|Rick Riordan     |Robbie Daymond  |\n|Jeff Kinney      |Dan Russell     |\n|Rick Riordan     |Soneela Nankani |\n|Rick Riordan     |Jesse Bernstein |\n:::\n:::\n\n\n</div>\n\n## Time Column {#time}\n\nThe `Time` column is the total duration of each audiobook\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(time) %>% head(5) %>%kable()\n```\n\n::: {.cell-output-display}\n|time               |\n|:------------------|\n|2 hrs and 20 mins  |\n|13 hrs and 8 mins  |\n|2 hrs and 3 mins   |\n|11 hrs and 16 mins |\n|10 hrs             |\n:::\n:::\n\n\nIt is a column of string datatype and the contents are needed to be extracted and typecasted to numeric values to aid further analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create new columns off the time column and typecast to numeric \naudible <- audible %>%\n  mutate(\n    # Extract hours and minutes into separate columns\n    hours = as.numeric(str_extract(time, \"\\\\d+(?=\\\\s*hr)\")),\n    minutes = as.numeric(str_extract(time, \"\\\\d+(?=\\\\s*min)\")),\n    \n    # Convert time to seconds\n    time_seconds = case_when(\n      str_detect(time, \"hrs|hr\") & !str_detect(time, \"mins|min\") ~\n        as.numeric(str_extract(time, \"\\\\d+(?=\\\\s*hr)\")) * 3600,\n      str_detect(time, \"hrs|hr\") & str_detect(time, \"min|mins\") ~\n        as.numeric(str_extract(time, \"\\\\d+(?=\\\\s*hr)\")) * 3600 +\n        as.numeric(str_extract(time, \"\\\\d+(?=\\\\s*min)\")) * 60,\n      str_detect(time, \"mins|min\") ~\n        as.numeric(str_extract(time, \"\\\\d+\")) * 60,\n      TRUE ~ as.numeric(time)\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `time_seconds = case_when(...)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n:::\n\n\n::: {.callout-note appearance=\"simple\"}\n## NA values\n\nThe NA values are introduced because there are some observations that may not have either hours or minutes. In such instances, since there is no hour or minute to extract as the case may be, the newly created 'hours' or 'minutes' columns return NA. This is a common occurrence in data processing when the expected data is not present in certain observations. And to handle such instances, NA values are replaced with zero\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Handle NA values (if there are cases like \"2 hours\" with no mins or \"45 mins\" with no hours)\naudible$hours[is.na(audible$hours)] <- 0\naudible$minutes[is.na(audible$minutes)] <- 0 \n```\n:::\n\n\n**cross-check**\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(time,hours,minutes,time_seconds) %>% head(6) %>% kable()\n```\n\n::: {.cell-output-display}\n|time               | hours| minutes| time_seconds|\n|:------------------|-----:|-------:|------------:|\n|2 hrs and 20 mins  |     2|      20|         8400|\n|13 hrs and 8 mins  |    13|       8|        47280|\n|2 hrs and 3 mins   |     2|       3|         7380|\n|11 hrs and 16 mins |    11|      16|        40560|\n|10 hrs             |    10|       0|        36000|\n|10 hrs and 35 mins |    10|      35|        38100|\n:::\n:::\n\n\n## Release Date Column {#releasedate}\n\nThe `Release Date` Column just as the name implies is the release date of each and every audiobook contained in the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(releasedate) %>% head(5) %>% kable()\n```\n\n::: {.cell-output-display}\n|releasedate |\n|:-----------|\n|04-08-08    |\n|01-05-18    |\n|06-11-20    |\n|05-10-21    |\n|13-01-10    |\n:::\n:::\n\n\nIt is of string datatype, hence the need to convert to Date in its truest form.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#converted releasedate column of data type string to date as should be\naudible$releasedate<- as.Date(audible$releasedate,format=\"%d-%m-%y\")\n#Extract the Year COlumn from the releasedate Column\naudible<-audible %>%mutate(Year=year(audible$releasedate)) \n```\n:::\n\n\n## Stars Column {#stars}\n\nThe `Stars` Column represents the average rating given by users for a particular audiobook. It has a band of 1 to 5. But during scraping of the data, the rating was scraped into the same column as the stars bringing about a string concatenation error. There should be a separate `rating` column that represents the number of users who have rated the audiobook.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(stars) %>% head(6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 1\n  stars                        \n  <chr>                        \n1 5 out of 5 stars34 ratings   \n2 4.5 out of 5 stars41 ratings \n3 4.5 out of 5 stars38 ratings \n4 4.5 out of 5 stars12 ratings \n5 4.5 out of 5 stars181 ratings\n6 5 out of 5 stars72 ratings   \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#split stars column into Stars and Rating Column,remove unwanted characters and convert columns to numeric \n  audible <- audible %>% \n    separate(stars, into = c(\"Stars\", \"Rating\"), sep = \"out of 5 stars\") %>% \n    mutate(\n      Stars = as.numeric(str_remove_all(Stars, \" \")),\n      Rating = as.numeric(str_remove_all(Rating, \",|ratings\"))\n    ) %>% \n    mutate_at(\n      vars(Stars, Rating),\n      ~if_else(is.na(.), 0, .)\n    )\n```\n:::\n\n\n**cross-check**\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(Stars,Rating) %>% head(7) %>% kable()\n```\n\n::: {.cell-output-display}\n| Stars| Rating|\n|-----:|------:|\n|   5.0|     34|\n|   4.5|     41|\n|   4.5|     38|\n|   4.5|     12|\n|   4.5|    181|\n|   5.0|     72|\n|   5.0|     11|\n:::\n:::\n\n\n## Price Column\n\nThe `Price` column represents the price of the audiobook.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(price) %>% head(10) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 1\n   price   \n   <chr>   \n 1 468.00  \n 2 820.00  \n 3 410.00  \n 4 615.00  \n 5 820.00  \n 6 656.00  \n 7 233.00  \n 8 820.00  \n 9 1,256.00\n10 820.00  \n```\n:::\n:::\n\n\nThis column is of string datatype and it has some unwanted characters such as the `,` and `Free` indicating that these books come at no cost at all.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(price) %>% filter(price==\"Free\")%>% head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 1\n  price\n  <chr>\n1 Free \n2 Free \n3 Free \n```\n:::\n:::\n\n\nIt is imperative to remove these characters and typecast the data type\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  audible <- audible %>% mutate(\n    price = case_when(\n      str_detect(price, \",\") ~ as.numeric(str_remove(price, \",\")),\n      str_detect(price, \"Free\") ~ as.numeric(str_remove(price, \"Free\")),\n      TRUE ~ as.numeric(price)\n    ),price=if_else(is.na(price),0,price)\n  )\n```\n:::\n\n\n**cross-check**\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(price) %>% head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 1\n   price\n   <dbl>\n 1   468\n 2   820\n 3   410\n 4   615\n 5   820\n 6   656\n 7   233\n 8   820\n 9  1256\n10   820\n```\n:::\n:::\n\n\n## Subsetting Needed Columns {#subsetting}\n\nSelecting useful columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% select(name:time,hours:time_seconds,releasedate,Year,language,Stars:price) %>% head(10) %>% kable()\n```\n\n::: {.cell-output-display}\n|name                                       |author            |narrator          |time               | hours| minutes| time_seconds|releasedate | Year|language | Stars| Rating| price|\n|:------------------------------------------|:-----------------|:-----------------|:------------------|-----:|-------:|------------:|:-----------|----:|:--------|-----:|------:|-----:|\n|Geronimo Stilton #11 & #12                 |Geronimo Stilton  |Bill Lobely       |2 hrs and 20 mins  |     2|      20|         8400|2008-08-04  | 2008|English  |   5.0|     34|   468|\n|The Burning Maze                           |Rick Riordan      |Robbie Daymond    |13 hrs and 8 mins  |    13|       8|        47280|2018-05-01  | 2018|English  |   4.5|     41|   820|\n|The Deep End                               |Jeff Kinney       |Dan Russell       |2 hrs and 3 mins   |     2|       3|         7380|2020-11-06  | 2020|English  |   4.5|     38|   410|\n|Daughter of the Deep                       |Rick Riordan      |Soneela Nankani   |11 hrs and 16 mins |    11|      16|        40560|2021-10-05  | 2021|English  |   4.5|     12|   615|\n|The Lightning Thief: Percy Jackson, Book 1 |Rick Riordan      |Jesse Bernstein   |10 hrs             |    10|       0|        36000|2010-01-13  | 2010|English  |   4.5|    181|   820|\n|The Hunger Games: Special Edition          |Suzanne Collins   |Tatiana Maslany   |10 hrs and 35 mins |    10|      35|        38100|2018-10-30  | 2018|English  |   5.0|     72|   656|\n|Quest for the Diamond Sword                |Winter Morgan     |Luke Daniels      |2 hrs and 23 mins  |     2|      23|         8580|2014-11-25  | 2014|English  |   5.0|     11|   233|\n|The Dark Prophecy                          |Rick Riordan      |Robbie Daymond    |12 hrs and 32 mins |    12|      32|        45120|2017-05-02  | 2017|English  |   5.0|     50|   820|\n|Merlin Mission Collection                  |Mary Pope Osborne |Mary Pope Osborne |10 hrs and 56 mins |    10|      56|        39360|2017-05-02  | 2017|English  |   5.0|      5|  1256|\n|The Tyrant’s Tomb                          |Rick Riordan      |Robbie Daymond    |13 hrs and 22 mins |    13|      22|        48120|2019-09-24  | 2019|English  |   5.0|     58|   820|\n:::\n:::\n\n\n## Data Validity\n\nThis is measure to ensure that all columns have the right datatype\n\n\n::: {.cell}\n\n```{.r .cell-code}\naudible %>% str()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [87,489 × 13] (S3: tbl_df/tbl/data.frame)\n $ name        : chr [1:87489] \"Geronimo Stilton #11 & #12\" \"The Burning Maze\" \"The Deep End\" \"Daughter of the Deep\" ...\n $ author      : chr [1:87489] \"Geronimo Stilton\" \"Rick Riordan\" \"Jeff Kinney\" \"Rick Riordan\" ...\n $ narrator    : chr [1:87489] \"Bill Lobely\" \"Robbie Daymond\" \"Dan Russell\" \"Soneela Nankani\" ...\n $ time        : chr [1:87489] \"2 hrs and 20 mins\" \"13 hrs and 8 mins\" \"2 hrs and 3 mins\" \"11 hrs and 16 mins\" ...\n $ releasedate : Date[1:87489], format: \"2008-08-04\" \"2018-05-01\" ...\n $ language    : chr [1:87489] \"English\" \"English\" \"English\" \"English\" ...\n $ Stars       : num [1:87489] 5 4.5 4.5 4.5 4.5 5 5 5 5 5 ...\n $ Rating      : num [1:87489] 34 41 38 12 181 72 11 50 5 58 ...\n $ price       : num [1:87489] 468 820 410 615 820 ...\n $ hours       : num [1:87489] 2 13 2 11 10 10 2 12 10 13 ...\n $ minutes     : num [1:87489] 20 8 3 16 0 35 23 32 56 22 ...\n $ time_seconds: num [1:87489] 8400 47280 7380 40560 36000 ...\n $ Year        : num [1:87489] 2008 2018 2020 2021 2010 ...\n```\n:::\n:::\n\n\n## Saving the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(audible,\"C:/Users/SAMMY/Desktop/Audible/audible_cleaned.csv\")\n```\n:::\n\n\n# Data Vizzes\n\n## Top 5 Authors on Audible\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter top 5 authors\ntop_authors <- audible %>%\n  group_by(author) %>%\n  summarise(n = n()) %>%\n  arrange(n) %>%\n  top_n(5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSelecting by n\n```\n:::\n\n```{.r .cell-code}\n# Bar plot of top 5 Audible Authors\nggplot(top_authors, aes(x = reorder(author, n), y = n, fill = author)) +\n  geom_bar(stat = \"identity\") +\n   geom_text(aes(label = n), hjust = -0.1, color = \"black\", size = 3.5) +\n  scale_fill_manual(values = c(\"矢島雅弘,石橋遊\"=\"#FFA000\",\"Smart Reading\"=\"#FFB347\",\"中西貴之,BJ\"=\"#FFC680\",\"div.\"=\"#FFDAB3\",\"Online Studio Productions\"=\"#FFEFE0\")) +\n  coord_flip() +\n  labs(x = \"Author\", y = \"Book Count\", title = \"Top 5 Authors in Audible Dataset\") +\n  theme_classic() +\n  theme(legend.position = \"none\",plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](audible_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n## Distribution of Star Rating\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstar_summary <- audible %>%\n  group_by(Stars) %>%\n  summarise(count = n()) %>%\n  arrange(desc(Stars))\n\n# Create the bar plot\nggplot(star_summary, aes(x =reorder(Stars,Stars), y = count)) +\n  geom_bar(stat = \"identity\", fill = \"#FFA000\", color = \"#000000\") +\n  geom_text(aes(label = count), vjust = -.5,hjust=0.5, color= \"black\", size = 3.5)+\n  labs(x = \"Star Rating\", y = \"Count\", title = \"Distribution of Star Ratings\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](audible_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n## Heatmap of Books Released By Year\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_years <- unique(audible$Year)\nyear_summary <- audible %>%\n  group_by(Year) %>%\n  summarise(count = n()) %>%\n  arrange(Year)\n\n# Create the heatmap\nggplot(year_summary, aes(x = \"\", y = Year, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"linen\", high = \"#FFA000\") +\n  geom_text(aes(label = count), vjust = 0.5, hjust = 1,color = \"black\", size = 2.8,alpha=1)+\n  scale_y_continuous(breaks = unique_years)+\n  labs(x = \"Book Count\", y = \"Year\", title = \"Heatmap of Books Released Each Year\") +\n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](audible_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n# Conclusion\n\nIn conclusion, the Audible dataset provides a rich source of information for understanding trends in audiobook releases over the years. The dataset, once cleaned and appropriately processed, offers valuable insights into the distribution and frequency of book releases per year.\n\nThe process of extracting the release year from the dates, summarizing the data by year, and visualizing the results in a heatmap, has allowed to effectively explore and understand the temporal patterns in the data.\n\nHowever, it's important to note that this is just the beginning. The dataset likely contains many more insights waiting to be discovered. Further analysis could involve exploring other variables in the dataset, examining the relationships between variables.\n\nOverall, the Audible dataset serves as a powerful tool for data-driven decision making in the audiobook industry, and its value is only enhanced through careful data cleaning and analysis. 📚🔍\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}